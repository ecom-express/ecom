<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="implementation-suite.xml" />
	<munit:test name="getInventory-test" doc:id="ed3dd02f-eb31-4221-bdf1-593385c07288" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="e77bb9f4-c739-4024-960c-53cf5b2c4e50" >
				<munit:payload value="#[readUrl('classpath://getInventorytest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getInventorytest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getInventorytest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getInventory" doc:id="d64e3c52-ce32-45ed-8c9a-c2746dbd5c75" name="getInventory"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="01106394-07b8-4d31-bdc7-bf0cd378fdac" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getInventorytest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Select Inventory Data" doc:id="d71b075d-6108-496b-98a0-e570b38bf41a" processor="db:select" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="dba3609a-19e1-4055-97af-6bbd5b93df1d" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="51d29384-6794-46f2-b582-8810222644fd" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="23def224-fdac-4733-bdfe-adf1e2607540" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="381f8c86-18d2-469f-8ad5-626356cbab91" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c4fccc33-0c41-462a-aba6-b6cc4c77cb5d" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="getOrder-test" doc:id="414d2380-e948-41f8-92b7-a535efe72349" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="c667fd65-d4da-4170-b98a-1d227361edb4" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="84cc408f-2434-485d-878b-8fd9cd6c8439" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getOrdertest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getOrdertest\mock_variable_.dwl')]" />
						<munit-tools:variable key="id" value="#[output application/java --- readUrl('classpath://getOrdertest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="091d4a13-972c-46d5-bf59-796d141eb329" >
				<munit:payload value="#[readUrl('classpath://getOrdertest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getOrdertest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getOrdertest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getOrder" doc:id="0ab5415b-f128-4446-ba6f-58d86e7eaaf4" name="getOrder"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="b343fa08-4668-431f-a35f-86f19da67018" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getOrdertest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="66d1dc18-1e1c-4187-a268-5bb7e950fe43" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="06d5d45e-b28b-4f30-ba0d-b73b11a95226" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="getWishlist-test" doc:id="25512109-4506-4ae3-a443-bb3d3cade330" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="3addaa4e-ce59-47be-bd74-8ab22d5fe1ce" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ed239e34-9b5b-4cbd-9552-e17eed39d695" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getWishlisttest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getWishlisttest\mock_variable_.dwl')]" />
						<munit-tools:variable key="id" value="#[output application/java --- readUrl('classpath://getWishlisttest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="3d5fc3ba-dc37-47dd-a9f5-df63e6846c34" >
				<munit:payload value="#[readUrl('classpath://getWishlisttest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getWishlisttest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getWishlisttest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getWishlist" doc:id="202dff1f-4542-449f-be98-caba9f878f3c" name="getWishlist"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="dd0c85fd-26bb-44e0-80c6-043965d12cda" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getWishlisttest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="e46ad60e-0d01-4b1e-8a21-84602e7f49f0" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="aa301343-14ba-41a9-baa5-328c7ea423c8" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="getInventoryId-test" doc:id="437438bd-cbc9-4e7c-959a-dfdae60ab5ca" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="4522cde8-f9eb-4a85-bc01-7c808092e035" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="29a57048-fa8d-401b-aff8-11552086dfc1" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getInventoryIdtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getInventoryIdtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="id" value="#[output application/java --- readUrl('classpath://getInventoryIdtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="b431ac7d-5d39-42ef-a61e-dc0f2b6d96b9" >
				<munit:payload value="#[readUrl('classpath://getInventoryIdtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getInventoryIdtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getInventoryIdtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getInventoryId" doc:id="c5badced-12b0-4d3c-8dfb-a44cca236a44" name="getInventoryId"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a832898a-7535-4325-ac64-34641e3914b4" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getInventoryIdtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="4f7a4329-b258-4f6b-a93f-caaa2125657a" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7460f5c6-7bc1-4f86-897b-9a17c0006106" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="getUserId-test" doc:id="2e263bb9-cea0-4275-841a-5df14637fcc6" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="ce3b07fd-c42c-4efa-84d2-7cb412945657" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5f779d72-2c52-45f4-8033-0c4088a06ae4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getUserIdtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getUserIdtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="id" value="#[output application/java --- readUrl('classpath://getUserIdtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="24fe1201-95cc-4e16-9d73-3e5ba1a9ea77" >
				<munit:payload value="#[readUrl('classpath://getUserIdtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getUserIdtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getUserIdtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getUserId" doc:id="77e58e64-135e-43a2-82fb-9149119ef91e" name="getUserId"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="514c9cf5-9a8a-46a5-ad14-6012f7b45748" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getUserIdtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="cf5f7f0c-f8d6-4e5b-affe-5f9cde3ecae4" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="0d02be77-502b-4ded-af30-ea909b439988" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="postInventory-test" doc:id="f87d110d-ad73-4c18-86bd-414b7bb3aef7" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="0f3ab485-04b3-4262-93a9-f5f3c89d9bcf" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postInventorytest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postInventorytest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postInventorytest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to postInventory" doc:id="f541ee26-044b-4436-a155-3387d25b0624" name="postInventory"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="65b8027a-4d20-4077-ba3f-8bed6305bda2" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postInventorytest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="d572594a-c8a7-4de7-81c0-057162f640ce" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c09bca3c-f61f-4144-b492-edcb99251534" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="postOrder-test" doc:id="8981c80b-94bb-4ace-811f-a51ab5d7f289" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="b580a365-fb19-4497-a5e0-49728cc2b23e" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postOrdertest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postOrdertest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postOrdertest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to postOrder" doc:id="04ad545b-f46e-4597-b9de-fb4bac16e79e" name="postOrder"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="9aa29e5b-a2be-4be5-87a7-fc9019f8c585" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postOrdertest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="cad8e80d-743c-4252-8b95-1990db0a7401" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eae0ad82-4cc8-44a9-9729-dd5738a78b8c" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="postUser-test" doc:id="3bc01e58-2972-4f58-9699-3df29f306bed" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="97595855-9aee-458e-aacb-11bad0e39130" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postUsertest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postUsertest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postUsertest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to postUser" doc:id="5c665dd1-4f45-4eb8-a88e-45042f4580a6" name="postUser"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="60b32545-4a37-4f0c-becb-b4c1a5bc4885" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postUsertest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="f536aa3d-d965-4a68-8bfb-0095900e9789" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ef63226b-1583-4ff1-a2e8-87a0ed7f2c05" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="postWishlist-test" doc:id="250cee76-90a9-4a5c-acb2-e11bfb645446" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="daa019a4-330c-4def-b0ab-0716bdd0d725" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postWishlisttest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postWishlisttest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postWishlisttest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to postWishlist" doc:id="30d1f889-2663-4c40-a38d-04c00ed9d28b" name="postWishlist"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="538b0388-ae0f-438c-adc7-d1a3d416c8cf" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postWishlisttest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="2c75b4e4-ed0f-435c-bd6f-e01191d915dc" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="6e8fda8c-f721-45ad-8492-817da326d746" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="putUser-test" doc:id="4842d2f2-5399-4d8d-b227-06abdcf5b37b" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="7e38d91c-72fd-4cf0-bc3e-4fe75d782b3e" >
				<munit:payload value="#[output application/json --- readUrl('classpath://putUsertest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://putUsertest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://putUsertest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to putUser" doc:id="b41b8ff2-4882-41e1-9ac9-553955fd5a5a" name="putUser"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a5b5ccd4-50be-47c0-84d6-5226651fdb4d" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import putUsertest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="a0907405-4b02-4a09-9832-c0e03e5c32f8" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7149c8b9-79f9-4c21-9fae-6eec53678c05" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="deleteUserId-test" doc:id="f463950d-bf7b-4e9f-96da-896d2978a126" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="a9e29d99-7a2d-4768-89a6-f2d19ef4b285" >
				<munit:payload value="#[readUrl('classpath://deleteUserIdtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://deleteUserIdtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://deleteUserIdtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to deleteUserId" doc:id="7da38169-cbd6-4796-b289-3f95e3c469e2" name="deleteUserId"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="af7da834-acc8-4431-9d4a-027b7bb25d97" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import deleteUserIdtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="273fc099-03c4-4079-a56a-92ca01f62fce" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="9f6caafd-455e-4885-bb31-44d452737f8d" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="postPayment-test" doc:id="08ce2028-108e-4c84-95e1-7363e7291c9d" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="63154202-d615-4ae4-8bfb-732c2b35e42a" >
				<munit:payload value="#[readUrl('classpath://postPaymenttest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://postPaymenttest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to postPayment" doc:id="79797b48-c3df-4f1b-8c47-f9cf01a887e6" name="postPayment"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="d59cbe97-5a48-4e3a-abab-cb1f8fd2a092" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postPaymenttest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Logger" doc:id="433d8cb8-6baa-4bf4-afa3-6b9149e437e4" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2234957c-1207-4f63-b03f-007db85ec662" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
